@model ProEstimator.Admin.ViewModel.DueInvoiceReport.DueInvoiceReportVM

@using ProEstimator.Admin.ViewModel.DueInvoiceReport;

@{
    ViewBag.Title = "Administration - Due Invoices Report";
    Layout = "~/Views/Shared/_LayoutPlain.cshtml";
}

<style>
    .input-group-addon {
        min-width: 150px;
        text-align: left;
    }

    .padd-top {
        padding-top: 30px;
        padding-bottom: 30px;
    }

    .k-grid td {
        white-space: normal;
    }

    .stackem {
        margin-bottom: 5px;
    }
</style>

<script>

    function GetSearchParameters() {
        return {
            loginIDFilter: $("#LoginID").val(), rangeStartFilter: $("#RangeStart").val(), rangeEndFilter: $("#RangeEnd").val(),
            hasCardErrorFilter: $('#chkHasCardError').is(":checked"), autoPayFilter: $('#chkAutoPay').is(":checked"), paidFilter: $('#chkPaid').is(":checked"),
            hasStripeInfoFilter: $('#chkHasStripeInfo').is(":checked")
        };
    }

    function OpenContract(loginID, contractID, invoiceID) {
        var win = window.open("", "_blank")
        var url = '@Url.Action("List", "Contract")' + '/' + loginID + '/' + contractID + '/' + invoiceID;
        win.location = url;
    }

    $(document).ready(function () {

        // Set up calendar controls
        $("#RangeStart").datepicker({
            showOn: "button",
            buttonImage: "/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date"
        });

        // Set up calendar controls
        $("#RangeEnd").datepicker({
            showOn: "button",
            buttonImage: "/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date"
        });

        // Do the acount id search
        $("#btnDueInvoiceReport").click(function () {

            // Refresh the history grid
            var grid = $("#dueinvoicereport-grid").data("kendoGrid");

            if (grid) {
                grid.dataSource.read();
            }
        });

        $("#btnShowRemoveCardErrors").click(function () {
            var grid = $("#dueinvoicereport-grid").data("kendoGrid");

            var columns = $("#dueinvoicereport-grid").data("kendoGrid").columns;

            jQuery.each(columns, function (index) {
                if (this.title == "Remove") {

                    var inputButtonText = $("#btnShowRemoveCardErrors").val();

                    if (inputButtonText == "Show Remove Card Errors")
                    {
                        grid.showColumn(this)
                        $("#btnShowRemoveCardErrors").prop("value", "Hide Remove Card Errors");
                        $("#btnRemoveSelectedCardErrors").show();
                    }
                    else
                    {
                        grid.hideColumn(this)
                        $("#btnShowRemoveCardErrors").prop("value", "Show Remove Card Errors");
                        $("#btnRemoveSelectedCardErrors").hide();
                    }
                }
            });
        });

        $("#btnRemoveSelectedCardErrors").click(function () {

            var selectedStripeInfoIDs = GetSelectedStripeInfoIDs();

            if (selectedStripeInfoIDs == "") {
                alert("There is no Card Error and Error Message to remove.");
                return;
            }

            if (confirm('Are you sure to remove selected Card Error and Error Message?')) {
                SelectedInvoiceCardErrorsRemove(selectedStripeInfoIDs);
            }
            
        });

        function SelectedInvoiceCardErrorsRemove(selectedStripeInfoIDs) {
            
            $.getJSON("/DueInvoiceReport/BatchStripeInfoCardErrorRemove", {
                ids: selectedStripeInfoIDs
            }, function (data) {
                RefreshDueInvoiceGrids();
            });
        }

        function RefreshDueInvoiceGrids() {
            var grid = $("#dueinvoicereport-grid").data("kendoGrid");

            if (grid) {
                grid.dataSource.read();
            }
        }

        function GetSelectedStripeInfoIDs() {
            var list = "";
            var seperator = "";

            $(".carderror-checkbox").each(function () {
                console.log($(this));
                if ($(this).is(":visible") && $(this).is(":checked")) {
                    var stripeInfoID = $(this).attr("id");
                    list += seperator + stripeInfoID;
                    seperator = ", ";
                }
            });

            return list;
        }

        $("#filter").on("input", function (e) {

            var grid = $("#dueinvoicereport-grid").data("kendoGrid");
            var valuetoFilter = e.target.value;

            var filter = KendogridSearchFilter(grid, valuetoFilter);

            grid.dataSource.filter(filter);
        });

        var currentDate = new Date();
        var dateChange = new Date();
        dateChange.setDate(currentDate.getDate() - 7)

        // RangeStart
        var rangeStart = GetDayMonthYear(dateChange);
        $("#RangeStart").val(rangeStart);

        // RangeEnd
        dateChange = new Date();
        var rangeEnd = GetDayMonthYear(dateChange);
        $("#RangeEnd").val(rangeEnd);

        function GetDayMonthYear(dateChange) {
            var d = dateChange.getDate();
            var day = (d < 10) ? '0' + d : d;
            var m = dateChange.getMonth() + 1;
            var month = (m < 10) ? '0' + m : m;
            var yy = dateChange.getYear();
            var year = (yy < 1000) ? yy + 1900 : yy;

            var dateRange = month + "/" + day + "/" + year;

            return dateRange;
        }

        $("#btnExcelExport").click(function () {

            var loginIDFilter = $("#LoginID").val();
            var rangeStartFilter = $("#RangeStart").val();
            var rangeEndFilter = $("#RangeEnd").val();
            var hasCardErrorFilter = $('#chkHasCardError').is(":checked");
            var autoPayFilter = $('#chkAutoPay').is(":checked");
            var paidFilter = $('#chkPaid').is(":checked");
            var hasStripeInfoFilter = $('#chkHasStripeInfo').is(":checked");

            var win = window.open("/DueInvoiceReport/DownloadData/?loginIDFilter=" + loginIDFilter + "&rangeStartFilter=" + rangeStartFilter
                                 + "&rangeEndFilter=" + rangeEndFilter + "&hasCardErrorFilter=" + hasCardErrorFilter
                                  + "&autoPayFilter=" + autoPayFilter + "&paidFilter=" + paidFilter + "&hasStripeInfoFilter=" + hasStripeInfoFilter, "_blank");

            if (win) {
                //Browser has allowed it to be opened
                win.focus();
            } else {
                //Browser has blocked it
                alert("Your browser blocked the site from opening a new tab, please allow popups for this site.");
            }
        });

    });

</script>

<div class="page-container">
    <div class="row padd-top">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4>Due Invoice Report</h4>
                    </div>
                    <div class="panel-body">
                        <div class="container">
                            <div class="row stackem">
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">Login ID</span>
                                        <input type="text" class="form-control" placeholder="Login ID" aria-describedby="loginId" id="LoginID" />
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">Range Start</span>
                                        <input type="text" class="input-group-addon" placeholder="Range Start" aria-describedby="RangeStart" id="RangeStart" readonly="true" />
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">RangeEnd</span>
                                        <input type="text" class="input-group-addon" placeholder="Range End" aria-describedby="RangeEnd" id="RangeEnd" readonly="true" />
                                    </div>
                                </div>
                            </div>
                            <div class="row stackem">
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon" style="border-right-width: 2px;border-right-style: groove;">Has Card Error</span>
                                        <input id="chkHasCardError" name="chkHasCardError" type="checkbox" style="width: 30px;height: 30px;" />
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon" style="border-right-width: 2px;border-right-style: groove;">AutoPay</span>
                                        <input id="chkAutoPay" name="chkAutoPay" type="checkbox" style="width: 30px;height: 30px;"/>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon" style="border-right-width: 2px;border-right-style: groove;">Paid</span>
                                        <input id="chkPaid" name="chkPaid" type="checkbox" style="width: 30px;height: 30px;"/>
                                    </div>
                                </div>
                            </div>
                            <div class="row stackem">
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon" style="border-right-width: 2px;border-right-style: groove;">Has Stripe Info</span>
                                        <input id="chkHasStripeInfo" name="chkHasStripeInfo" type="checkbox" style="width: 30px;height: 30px;"/>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        &nbsp;
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <a class="btn btn-primary" href="javascript:void(0);" style="width:95% !important" id="btnDueInvoiceReport" role="button">Search</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>Due Invoice Report</h4>
            </div>
            <div class="col-lg-8 col-md-7 col-sm-6" style="margin-top:5px">
                <div class="dt-buttons ui basic buttons"><button id="btnExcelExport" name="btnExcelExport" class="ui button buttons-excel buttons-html5" tabindex="0" aria-controls="cc-wei-table"><span class="ui-button-text">Excel</span></button></div>
            </div>
            <div style="text-align: right;margin-top:5px">
                Search: <input type="text" id="filter" />
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="dueinvoicereport-grid-container" class="datagrid">
                        @(Html.Kendo().Grid<DueInvoiceReportVM>()
                                .Name("dueinvoicereport-grid")
                                .Columns(columns =>
                                {
                                columns.Bound(item => item.ID).Title("ID").Hidden();
                                columns.Template(@<text></text>).ClientTemplate("<a href='javascript: void(0);' onclick=\"OpenContract('#= LoginID#','#= ContractID#','#= InvoiceID#')\">#=InvoiceID#</a>").Title("Invoice ID");
                                columns.Bound(item => item.InvoiceSummary).Title("Invoice Summary");
                                columns.Bound(item => item.InvoiceAmount).Title("Invoice Amount");
                                columns.Bound(item => item.LoginID).Title("Login ID");
                                columns.Bound(item => item.DueDate).Title("Due Date");
                                columns.Bound(item => item.Paid).Title("Paid");
                                columns.Bound(item => item.AutoPay).Title("Auto Pay");
                                columns.Bound(item => item.HasCard).Title("Has Card");
                                columns.Bound(item => item.CardError).Title("Card Error");
                                columns.Bound(item => item.ErrorMessage).Title("Error Message");
                                columns.Bound(item => item.ContractID).Title("ContractID").Hidden();
                                columns.Bound(item => item.CardError).Template(@<text></text>).ClientTemplate("  " + "# if (CardError == 'Yes') { #" + "<input type='checkbox' class='carderror-checkbox' id='#= ID#' checked />" + "# } #").Width(10).HeaderTemplate("").Title("Remove").Hidden();
                                })
                                .Sortable()
                                .Pageable(pageable => pageable
                                    .Refresh(false)
                                )
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .ServerOperation(false)
                                    .Read(read => read.Action("GetDueInvoiceReport", "DueInvoiceReport").Data("GetSearchParameters"))
                                    .PageSize(25)
                                //.Sort(a => a.Add("Time Occured").Ascending()
                                ))
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">

                    <div id="card_errors-multi-action" style="text-align: right; cursor: pointer; padding-right: 21px; padding-bottom: 20px;">
                        <input id="btnShowRemoveCardErrors" type="button" value="Show Remove Card Errors" />
                        <input id="btnRemoveSelectedCardErrors" type="button" value="Remove Selected Card Errors" style="display:none" />
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>



