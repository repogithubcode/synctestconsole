@model ProEstimator.Admin.ViewModel.Errors.ErrorLogReportVM

@using ProEstimator.Admin.ViewModel.Errors;

@{
    ViewBag.Title = "Administration - Error Log";
    Layout = "~/Views/Shared/_LayoutPlain.cshtml";
}

<style>
    .input-group-addon {
        min-width: 150px;
        text-align: left;
    }

    .padd-top {
        padding-top: 30px;
        padding-bottom: 30px;
    }

    .k-grid td {
        white-space: normal;
    }

    .stackem {
        margin-bottom: 5px;
    }
</style>

<script>

    function GetSearchParameters() {
        return {
            loginIDFilter: $("#LoginID").val(), adminInfoIDFilter: $("#AdminInfoID").val(), rangeStartFilter: $("#RangeStart").val(),
            rangeEndFilter: $("#RangeEnd").val(), errorTagFilter: $("#ErrorTag").val(), errorTextFilter: $("#ErrorText").val()
        };
    }

    $(document).ready(function () {

        // Set up calendar controls
        $("#RangeStart").datepicker({
            showOn: "button",
            buttonImage: "/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date"
        });

        // Set up calendar controls
        $("#RangeEnd").datepicker({
            showOn: "button",
            buttonImage: "/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date"
        });

        // Do the acount id search
        $("#btnErrorLogReport").click(function () {

            // Refresh the history grid
            var grid = $("#errorlogreport-grid").data("kendoGrid");

            if (grid) {
                grid.dataSource.page(1);
                grid.dataSource.read();
            }
        });

        $("#filter").on("input", function (e) {

            var grid = $("#errorlogreport-grid").data("kendoGrid");
            var valuetoFilter = e.target.value;

            var filter = KendogridSearchFilter(grid, valuetoFilter);

            grid.dataSource.filter(filter);
        });

        var currentDate = new Date();
        var dateChange = new Date();
        dateChange.setDate(currentDate.getDate() - 7)

        // RangeStart
        var rangeStart = GetDayMonthYear(dateChange);
        $("#RangeStart").val(rangeStart);

        // RangeEnd
        dateChange = new Date();
        var rangeEnd = GetDayMonthYear(dateChange);
        $("#RangeEnd").val(rangeEnd);

        function GetDayMonthYear(dateChange) {
            var d = dateChange.getDate();
            var day = (d < 10) ? '0' + d : d;
            var m = dateChange.getMonth() + 1;
            var month = (m < 10) ? '0' + m : m;
            var yy = dateChange.getYear();
            var year = (yy < 1000) ? yy + 1900 : yy;

            var dateRange = month + "/" + day + "/" + year;

            return dateRange;
        }
    });

</script>

<div class="page-container">
    <div class="row padd-top">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4>Filter Error Log</h4>
                    </div>
                    <div class="panel-body">
                        <div class="container">
                            <div class="row stackem">
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">Login ID</span>
                                        <input type="text" class="form-control" placeholder="Login ID" aria-describedby="loginId" id="LoginID" />
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">Range Start</span>
                                        <input type="text" class="input-group-addon" placeholder="Range Start" aria-describedby="RangeStart" id="RangeStart" readonly="true" />
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">RangeEnd</span>
                                        <input type="text" class="input-group-addon" placeholder="Range End" aria-describedby="RangeEnd" id="RangeEnd" readonly="true" />
                                    </div>
                                </div>
                            </div>
                            <div class="row stackem">
                                <div class="col-lg-4">
                                    <div class="input-group">
                                        <span class="input-group-addon">Estimate ID</span>
                                        <input type="text" class="form-control" placeholder="AdminInfoID" aria-describedby="AdminInfoID" id="AdminInfoID" />
                                    </div>
                                </div>
                                <div class="col-lg-8">
                                    <div class="input-group">
                                        <span class="input-group-addon">Error Tag</span>
                                        @Html.DropDownListFor(model => model.SelectedErrorTag, Model.ErrorTagDDL, new { @id = "ErrorTag", style = "width: 540px;height:35px" })
    
                                        @*<input type="text" class="form-control" placeholder="Error Tag" aria-describedby="ErrorTag" id="ErrorTag" />*@
                                    </div>
                                </div>
                            </div>
                            <div class="row stackem">
                                <div class="col-lg-12" style="z-index:0">
                                    <div class="input-group">
                                        <span class="input-group-addon">Error Text</span>
                                        <input type="text" class="form-control" placeholder="Error Text" aria-describedby="ErrorText" id="ErrorText" />
                                    </div>
                                </div>
                            </div>
                            <div class="row stackem">
                                <div class="col-lg-10">
                                    &nbsp;
                                </div>
                                <div class="col-lg-2">
                                    <div class="text-center">
                                        <a class="btn btn-primary" href="javascript:void(0);" style="width:95% !important" id="btnErrorLogReport" role="button">Search</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>Error Log Report</h4>
            </div>
            <div style="text-align: right;margin-top:5px">
                Search: <input type="text" id="filter" />
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="errorlogreport-grid-container" class="datagrid">
                        @(Html.Kendo().Grid<ErrorLogReportVM>()
                                .Name("errorlogreport-grid")
                                .Columns(columns =>
                                {
                                    columns.Bound(item => item.LoginID).Title("Login Id");
                                    columns.Bound(item => item.AdminInfoID).Title("AdminInfo Id");
                                    columns.Bound(item => item.ErrorText).Title("Error Text");
                                    columns.Bound(item => item.TimeOccurred).Title("Time Occured");
                                    columns.Bound(item => item.SessionVars).Title("Session Vars").Hidden();
                                    columns.Bound(item => item.ErrorFixed).Title("Error Fixed").Hidden();
                                    columns.Bound(item => item.FixNote).Title("Error Tag");
                                    columns.Bound(item => item.App).Title("App").Hidden();
                                })
                                .Sortable()
                                .Pageable(pageable => pageable
                                    .Refresh(false) 
                                )
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Read(read => read.Action("GetErrorLogReport", "ErrorLogReport").Data("GetSearchParameters"))
                                    .PageSize(25)
                                    .ServerOperation(true)
                                //.Sort(a => a.Add("Time Occured").Ascending()
                                ))
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



